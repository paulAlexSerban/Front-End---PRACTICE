---
name: Continuous Integration
on:
    push:
        branches: ['develop', 'release', 'main']

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    lint:
        name: 'Continuous Integration - Lint'
        runs-on: ubuntu-latest
        environment:
            name: 'Build'
        env:
            NODE_VERSION: 18.17.1
            SITE_URL: https://paulalexserban.github.io/prj--fe-ci-build-system
        steps:
            - name: 'ðŸ“¥ checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: 'ðŸ”„  Cache node_modules'
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: 'ðŸ”§ Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: 'ðŸ“¦  Install CI dependencies'
              run: npm install

            # @TODO: should check which sub project has changed and only then run the lint required

            - name: 'ðŸ§¹ Lint frontend/ui-website-boilerplate'
              run: npm run lint --workspace ui-website-boilerplate

            - name: 'ðŸ§¹ Lint frontend/ui-app-boilerplate'
              run: npm run lint --workspace ui-app-boilerplate

    test:
        name: 'Continuous Integration - Test'
        runs-on: ubuntu-latest
        environment:
            name: 'Build'
        env:
            NODE_VERSION: 18.17.1
            SITE_URL: https://paulalexserban.github.io/prj--fe-ci-build-system
        steps:
            - name: 'ðŸ“¥ checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: 'ðŸ”„  Cache node_modules'
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: 'ðŸ”§ Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: 'ðŸ“¦  Install CI dependencies'
              run: npm install

            # @TODO: should check which sub project has changed and only then run the tests required

            - name: 'ðŸ§ª Test frontend/ui-website-boilerplate'
              run: npm run test --workspace ui-website-boilerplate

            - name: 'ðŸ§ª Test frontend/ui-app-boilerplate'
              run: npm run test --workspace ui-app-boilerplate

    build:
        name: 'Continuous Integration - Build'
        runs-on: ubuntu-latest
        environment:
            name: 'Build'
        env:
            NODE_VERSION: 18.17.1
            SITE_URL: https://paulalexserban.github.io/prj--fe-ci-build-system
        steps:
            - name: 'ðŸ“¥ checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: 'ðŸ”„  Cache node_modules'
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: 'ðŸ”§ Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: 'ðŸ“¦  Install CI dependencies'
              run: npm install

            # @TODO: should check which sub project has changed and only then run the build required

            - name: 'ðŸš€ Build frontend/ui-website-boilerplate'
              run: npm run build --workspace ui-website-boilerplate

            - name: 'ðŸš€ Build frontend/ui-app-boilerplate'
              run: npm run build --workspace ui-app-boilerplate
